name: Build and Deploy Android (Xamarin App)

on:
  workflow_call:
    inputs:
      net_version:
        required: true
        type: string
      project_name:
        required: true
        type: string
      net_droid_version:
        required: true
        type: string
      package_name: 
         required: true
         type: string
      build_number_offset:
        type: string
        description: the offset for incrementing the build number (i.e 33928997)
      firebase_app_id:
        type: string
        description: Firebase App Id for App Distribution 
    secrets:
      KEYSTORE_ALIAS: 
        required: true
      KEYSTORE:
        required: true
      KEYSTORE_PASSWORD: 
        required: true
      PLAYSTORE_SERVICE_ACCOUNT:
        required: true
      Firebase_Key:
        required: true
       
env:
  project-file: ${{ inputs.build-source-folder }}/${{ inputs.build-project }}
  
jobs:        
  android-adhoc-build-deploy:      
    name:  Android Build & Deploy
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4    

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
              java-version: '17'
              distribution: 'temurin'

      - name: Setup .NET Core ${{ inputs.net_version}} SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.net_version}}
      - name: Install MAUI workload
        run: dotnet workload install maui

      - name: run number with offset
        id: get_buildnum
        run: echo "::set-output name=buildnum::$((${{ github.run_number }}+${{ inputs.build_number_offset }}))"   

      - name: JSON to variables...
        uses: antifree/json-to-variables@v1.0.1
        with:
            filename: './${{ inputs.project_name }}/version.json'
            prefix: appVersion

      - name: Set Application Version
        uses: managedcode/MAUIAppVersion@v1
        with:
          csproj: './${{ inputs.project_name }}/${{ inputs.project_name }}.csproj'
          version: ${{ steps.get_buildnum.outputs.buildnum }} 
          displayVersion: ${{ env.appVersion_version }}
          printFile: true

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileDir: ${{ runner.temp }}
          fileName: 'kf.keystore'
          encodedString: ${{ secrets.KEYSTORE }}          

      - name: Install dependencies
        run: dotnet restore

      - name: Output Data
        run: echo ${{secrets.KEYSTORE_ALIAS}} | sed 's/./& /g'   

      - name: Build Droid App
        run: dotnet  publish ./${{ inputs.project_name }}/${{ inputs.project_name }}.csproj -f ${{ inputs.net_droid_version }} -c Release  /p:AndroidApkFileName=${{ inputs.project_name }} /p:AndroidKeyStore=true /p:AndroidSigningKeyStore='${{ runner.temp }}/kf.keystore' /p:AndroidSigningKeyAlias=${{ secrets.KEYSTORE_ALIAS }} /p:AndroidSigningKeyPass='${{ secrets.KEYSTORE_PASSWORD }}' /p:AndroidSigningStorePass='${{ secrets.KEYSTORE_PASSWORD }}' -o $GITHUB_WORKSPACE/Output

#      - name: Output Data
#        run: echo ${{secrets.KEYSTORE_ALIAS}} | sed 's/./& /g'     
     
      - name: Get full filename ending with Signed.aab
        id: find_file
        shell: pwsh
        run: |
          $filename = Get-ChildItem -Path $GITHUB_WORKSPACE/Output -Filter '*Signed.aab' | Select-Object -ExpandProperty FullName -First 1
          if ($filename) {
            Write-Output "File found: $filename"
            echo "file_name=$filename" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          } else {
            Write-Error "No file ending with Signed.aab found."
          }      

      - uses: actions/upload-artifact@v4
        with:
          name: '${{ inputs.package_name}}.${{ env.appVersion_version }}-signed.aab'
          path: ${{ env.file_name }}
          retention-days: 10
          overwrite: true
          
      - name: Set file path environment variable
        env:
          APP_FILE_PATH:  ${{ env.file_name }}
        id: file-path
        run: |
          $New_Path = $env:APP_FILE_PATH.Replace('\', '/')
          echo "New_Path=$New_Path" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
            credentials_json: '${{ secrets.Firebase_Key }}'
          
      - name: Distribute to Firebase for testing
        run: |
            # Check Firebase CLI installation and install if necessary
            npm install -g firebase-tools

            # Verify installation
            firebase --version

            ls $GITHUB_WORKSPACE\Output

            # Get the commit message
            $commitMessage = git log -1 --pretty='%B'
            Write-Host "##vso[task.setvariable variable=CommitMessage]$commitMessage"
  
            # Distribute APK to Firebase
            firebase appdistribution:distribute ${{ env.file_name }} --app ${{ inputs.firebase_app_id }} --groups "Testers" --release-notes "Smoke Testing in preperation for release ($commitMessage)"
     
      - uses: r0adkll/upload-google-play@v1
        #if: github.ref != 'refs/heads/main'
        if: false
        name: Upload Android Artifact to Play Console
        with:
            serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_SERVICE_ACCOUNT }}
            packageName: ${{ inputs.package_name }}
            releaseFiles: '${{ env.New_Path }}'
            track: beta
            
      - uses: r0adkll/upload-google-play@v1
        if: github.ref == 'refs/heads/main'
        name: Upload Android Artifact to Play Console
        with:
            serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_SERVICE_ACCOUNT }}
            packageName: ${{ inputs.package_name }}
            releaseFiles: '${{ env.New_Path }}'
            track: production
